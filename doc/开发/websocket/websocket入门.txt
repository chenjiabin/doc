一、为什么需要 WebSocket？
    初次接触 WebSocket 的人，都会问同样的问题：我们已经有了 HTTP 协议，为什么还需要另一个协议？它能带来什么好处？
    答案很简单，因为 HTTP 协议有一个缺陷：通信只能由客户端发起。
    举例来说，我们想了解今天的天气，只能是客户端向服务器发出请求，服务器返回查询结果。HTTP 协议做不到服务器主动向客户端推送信息。
    这种单向请求的特点，注定了如果服务器有连续的状态变化，客户端要获知就非常麻烦。我们只能使用"轮询"：每隔一段时候，就发出一个询问，了解服务器有没有新的信息。最典型的场景就是聊天室。
    轮询的效率低，非常浪费资源（因为必须不停连接，或者 HTTP 连接始终打开）。因此，工程师们一直在思考，有没有更好的方法。WebSocket 就是这样发明的。


二、简介
    WebSocket 协议在2008年诞生，2011年成为国际标准。所有浏览器都已经支持了。
    它的最大特点就是，服务器可以主动向客户端推送信息，客户端也可以主动向服务器发送信息，是真正的双向平等对话，属于服务器推送技术的一种。

    其他特点包括：
      （1）建立在 TCP 协议之上，服务器端的实现比较容易。
      （2）与 HTTP 协议有着良好的兼容性。默认端口也是80和443，并且握手阶段采用 HTTP 协议，因此握手时不容易屏蔽，能通过各种 HTTP 代理服务器。
      （3）数据格式比较轻量，性能开销小，通信高效。
      （4）可以发送文本，也可以发送二进制数据。
      （5）没有同源限制，客户端可以与任意服务器通信。
      （6）协议标识符是ws（如果加密，则为wss），服务器网址就是 URL。


      WebSocket协议本质上是一个基于 TCP的协议
          为了建立一个 WebSocket 连接，客户端浏览器首先要向服务器发起一个 HTTP 请求
          这个请求和通常的 HTTP 请求不同，包含了一些附加头信息，其中附加头信息"Upgrade: WebSocket"表明这是一个申请协议升级的 HTTP 请求
          服务器端解析这些附加的头信息然后产生应答信息返回给客户端，客户端和服务器端的 WebSocket 连接就建立起来了
          双方就可以通过这个连接通道自由的传递信息，并且这个连接会持续存在直到客户端或者服务器端的某一方主动的关闭连接


HTML5 WebSocket
    WebSocket是HTML5开始提供的一种在单个 TCP 连接上进行全双工通讯的协议。
    在WebSocket API中，浏览器和服务器只需要做一个握手的动作，然后，浏览器和服务器之间就形成了一条快速通道。两者之间就直接可以数据互相传送。
    浏览器通过 JavaScript 向服务器发出建立 WebSocket 连接的请求，连接建立以后，客户端和服务器端就可以通过 TCP 连接直接交换数据。
    当你获取 Web Socket 连接后，你可以通过 send() 方法来向服务器发送数据，并通过 onmessage 事件来接收服务器返回的数据。


var Socket = new WebSocket(url, [protocal]);					#创建websocket对象,第一个参数url, 指定连接的 URL。第二个参数 protocol 是可选的，指定了可接受的子协议。

WebSocket 属性
    Socket.readyState	只读属性，表示连接状态，可以是以下值：
        0 - 表示连接尚未建立
        1 - 表示连接已建立，可以进行通信
        2 - 表示连接正在进行关闭
        3 - 表示连接已经关闭或者连接不能打开

    Socket.bufferedAmount	只读属性，表示已被send()放入正在队列中等待传输，但是还没有发出的UTF-8文本字节数


WebSocket 事件
    事件	    事件处理程序	        描述
    open	    Socket.onopen	     连接建立时触发
    message	  Socket.onmessage	 客户端接收服务端数据时触发
    error	    Socket.onerror	   通信发生错误时触发
    close	    Socket.onclose	   连接关闭时触发


WebSocket 方法
    Socket.send()	      使用连接发送数据
    Socket.close()	    关闭连接


参考链接:
		https://developer.mozilla.org/en-US/docs/Web/API/WebSocket
		https://www.w3cschool.cn/html5/html5-websocket.html
    http://www.ruanyifeng.com/blog/2017/05/websocket.html
