Docker与传统虚拟机的区别：
	虚拟化技术依赖物理硬件，而docker构建在操作系统上，利用操作系统的containerization技术实现
	docker开源而且轻量，称为“容器”，单个容器适合部署少量应用，比如部署一个redis、一个memcached
	传统的虚拟机使用快照来保存状态；而docker在保存状态上引入了类似源代码管理机制，将容器的快照历史版本一一记录，切换成本很低
	docker可以通过Dockfile来构建整个容器，重启和构建速度很快
	Dockerfile可以基于已经构建好的容器镜像，创建新容器。Dockerfile可以通过社区分享和下载
	Containerization(容器化集装箱化)是以可移动可预测方法发布和部署应用程序的过程，它通过包装组件和它们的依赖，打包成一个标准的、隔离的、轻量的环境，称为容器container

Docker的主要特性：
	文件系统隔离：每个进程容器运行在完全独立的根文件系统里
	资源隔离：可以使用cgroup为每个进程容器分配不同的系统资源，例如CPU和内存
	网络隔离：每个进程容器运行在自己的网络命名空间里，拥有自己的虚拟接口和IP地址
	写时复制：采用写时复制方式创建根文件系统，这让部署变得极其快捷，并且节省内存和硬盘空间
	日志记录：Docker将会收集和记录每个进程容器的标准流（stdout/stderr/stdin），用于实时检索或批量检索
	变更管理：容器文件系统的变更可以提交到新的映像中，并可重复使用以创建更多的容器。无需使用模板或手动配置
	交互式Shell：Docker可以分配一个虚拟终端并关联到任何容器的标准输入上，例如运行一个一次性交互shell



Docker Engine提供了核心的Docker技术，可以实现镜像和容器
    镜像是在运行时使用的文件系统和参数。它没有状态，永远不会改变。
    容器是一个正在运行的镜像实例。


Docker基本概念
	镜像(Image)
		只读模板，可用于创建docker容器
	容器(Container)
		实例化的镜像，在只读层上增加了一层可写层，容器可以启动，停止，删除和修改每个容器都是相互隔离的
	仓库(Repository)
		集中存放镜像的地方，仓库分为公开仓库(Public)和私有仓库(Private)两种形式。
		世界上最大的公开仓库是Docker Hub，国内的公开仓库Docker Pool等

		用户可以在本地网络内创建一个私有仓库	
		用户创建的镜像可以push到公有或者私有仓库，如果需要在另外一台机器上使用这个镜像时候，只需要从仓库上pull下来就可以了


当利用docker run来创建容器时，Docker在后台运行的标准操作包括：
	1、检查本地是否存在指定的镜像，不存在则从公有仓库下载
	2、利用镜像创建并启动一个容器
	3、分配一个文件系统，并在只读的镜像层外面挂载一层可读写层
	4、从宿主机配置的网桥接口中桥接一个虚拟接口到容器中去
	5、从地址池分配一个 ip 地址给容器
	6、执行用户指定的应用程序
	7、执行完毕后容器终止

	
Docker镜像实现原理
	Docker的每个镜像都由很多层次构成，Docker使用Union FS将这些不同的层结合到一个镜像中去。
	Union FS主要有两个用途，1、可以实现不借助 LVM、RAID等将多个disk挂到同一个目录下
	2、将一个只读的分支和一个可写的分支联合在一起，此方法可以允许在镜像不变的基础上允许用户在其上进行一些写操作



	


